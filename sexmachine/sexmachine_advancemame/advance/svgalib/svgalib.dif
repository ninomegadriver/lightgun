diff -u ../svgalib.ori/endianes.h ./endianes.h
--- ../svgalib.ori/endianes.h	2001-05-29 11:00:22.000000000 +0200
+++ ./endianes.h	2005-03-18 21:56:59.000000000 +0100
@@ -1,14 +1,12 @@
-#include <endian.h>
-#include <byteswap.h>
+#ifndef __ENDIANES_H
+#define __ENDIANES_H
 
-#if __BYTE_ORDER == __BIG_ENDIAN
+static inline unsigned LE32(unsigned _val) {
+	return _val;
+}
 
-#define LE32(x) bswap_32(x)
-#define BE32(x) (x)
-
-#else /* little endian */
-
-#define LE32(x) (x)
-#define BE32(x) bswap_32(x)
+static inline unsigned BE32(unsigned _val) {
+	return (_val << 24) | ((_val&0xff00) << 8) | ((_val&0xff0000) >> 8) | (_val >> 24);
+}
 
 #endif
diff -u ../svgalib.ori/libvga.h ./libvga.h
--- ../svgalib.ori/libvga.h	2004-09-10 13:04:03.000000000 +0200
+++ ./libvga.h	2005-04-06 19:09:58.000000000 +0200
@@ -9,11 +9,9 @@
 #define _LIBVGA_H
 
 #include <string.h>
+#include <stdlib.h>
 
-#include <stdint.h>
-//typedef unsigned int CARD32;
-//typedef unsigned short CARD16;
-//typedef unsigned char CARD8;
+#include "svgaint.h"
 
 /* --------------------- Macro definitions shared by library modules */
 
@@ -217,22 +215,14 @@
 #define gr_writew(v,off)	(*(uint16_t*)((GM)+(off)) = (v))
 #define gr_writel(v,off)	(*(uint32_t*)((GM)+(off)) = (v))
 
-extern void __svgalib_port_out(int value, int port);
-extern void __svgalib_port_outw(int value, int port);
-extern void __svgalib_port_outl(int value, int port);
-extern void __svgalib_port_rep_outb(unsigned char* string, int length, int port);
-
-extern int __svgalib_port_in(int port);
-extern int __svgalib_port_inw(int port);
-extern int __svgalib_port_inl(int port);
-
-#define port_in __svgalib_port_in
-#define port_inw __svgalib_port_inw
-#define port_inl __svgalib_port_inl
-#define port_out __svgalib_port_out
-#define port_outw __svgalib_port_outw
-#define port_outl __svgalib_port_outl
-#define port_rep_outb __svgalib_port_rep_outb
+extern void port_out(int value, int port);
+extern void port_outw(int value, int port);
+extern void port_outl(int value, int port);
+extern void port_rep_outb(unsigned char* string, int length, int port);
+
+extern int port_in(int port);
+extern int port_inw(int port);
+extern int port_inl(int port);
 
 /* Note that the arguments of outb/w are reversed compared with the */
 /* kernel sources. The XFree86 drivers also use this format. */
diff -u ../svgalib.ori/memio.h ./memio.h
--- ../svgalib.ori/memio.h	2002-07-06 20:24:57.000000000 +0200
+++ ./memio.h	2005-03-18 21:56:59.000000000 +0100
@@ -1,4 +1,3 @@
-#include <stdint.h>
 
 #ifndef __alpha__
 
diff -u ../svgalib.ori/svgadriv.h ./svgadriv.h
--- ../svgalib.ori/svgadriv.h	2005-02-03 12:33:04.000000000 +0100
+++ ./svgadriv.h	2005-04-06 19:12:25.000000000 +0200
@@ -16,7 +16,7 @@
 #include "libvga.h"
 #include "timing.h"
 #include "accel.h"
-#include "io.h"
+#include "memio.h"
 
 #define MAX_REGS 5000 /* VESA needs a lot of storage space */
 
@@ -86,6 +86,7 @@
 extern DriverSpecs __svgalib_chips_driverspecs;
 extern DriverSpecs __svgalib_apm_driverspecs;
 extern DriverSpecs __svgalib_nv3_driverspecs;
+extern DriverSpecs __svgalib_nv3_19_driverspecs;
 extern DriverSpecs __svgalib_et6000_driverspecs;
 extern DriverSpecs __svgalib_vesa_driverspecs;
 extern DriverSpecs __svgalib_mx_driverspecs;
@@ -100,6 +101,7 @@
 extern DriverSpecs __svgalib_r128_driverspecs;
 extern DriverSpecs __svgalib_g400_driverspecs;
 extern DriverSpecs __svgalib_savage_driverspecs;
+extern DriverSpecs __svgalib_savage_18_driverspecs;
 extern DriverSpecs __svgalib_mil_driverspecs;
 extern DriverSpecs __svgalib_trident_driverspecs;
 extern DriverSpecs __svgalib_rendition_driverspecs;
diff -u ../svgalib.ori/vga.h ./vga.h
--- ../svgalib.ori/vga.h	2005-02-03 12:30:02.000000000 +0100
+++ ./vga.h	2005-04-06 19:11:37.000000000 +0200
@@ -560,8 +560,10 @@
  * NULL is a valid argument for any of the ptrs.
  */
 
+/*
     extern int vga_waitevent(int which, fd_set * in, fd_set * out, fd_set * except,
 			     struct timeval *timeout);
+*/
 
 /*
  * valid values for what ( | is valid to combine them )
diff -u ../svgalib.ori/vgammvga.c ./vgammvga.c
--- ../svgalib.ori/vgammvga.c	2002-07-06 18:07:37.000000000 +0200
+++ ./vgammvga.c	2005-03-18 21:56:59.000000000 +0100
@@ -1,5 +1,5 @@
 #include "libvga.h"
-#include "io.h"
+#include "memio.h"
 
 unsigned long __svgalib_vgammbase;
 
diff -u ../svgalib.ori/drivers/apm.c drivers/apm.c
--- ../svgalib.ori/drivers/apm.c	2005-02-09 13:29:01.000000000 +0100
+++ drivers/apm.c	2005-03-18 21:57:27.000000000 +0100
@@ -27,14 +27,14 @@
 #include <sys/mman.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "vgapci.h"
 
 /* New style driver interface. */
 #include "timing.h"
 #include "vgaregs.h"
-#include "vgammvgaio.h"
-#include "interface.h"
+#include "vgammvga.h"
+#include "interfac.h"
 
 #define APMREG_SAVE(i) (VGA_TOTAL_REGS+i)
 #define APM_TOTAL_REGS (VGA_TOTAL_REGS + 38)
diff -u ../svgalib.ori/drivers/ark.c drivers/ark.c
--- ../svgalib.ori/drivers/ark.c	2004-09-10 13:12:14.000000000 +0200
+++ drivers/ark.c	2005-03-18 21:57:32.000000000 +0100
@@ -29,12 +29,12 @@
 #include <signal.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 
 #include "timing.h"
 #include "ramdac/ramdac.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "accel.h"
 
 
diff -u ../svgalib.ori/drivers/banshee.c drivers/banshee.c
--- ../svgalib.ori/drivers/banshee.c	2004-09-10 13:14:55.000000000 +0200
+++ drivers/banshee.c	2005-03-18 21:57:38.000000000 +0100
@@ -8,13 +8,13 @@
 #include <unistd.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
-#include "vgarelvgaio.h"
+#include "svgadriv.h"
+#include "vgarelvg.h"
 
 /* New style driver interface. */
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
 
 #define BANSHEEREG_SAVE(i) (VGA_TOTAL_REGS+i)
diff -u ../svgalib.ori/drivers/et6000.c drivers/et6000.c
--- ../svgalib.ori/drivers/et6000.c	2004-09-10 12:59:25.000000000 +0200
+++ drivers/et6000.c	2005-03-18 21:57:42.000000000 +0100
@@ -10,9 +10,9 @@
 #include <sys/mman.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "timing.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgaregs.h"
 #include "vgapci.h"
 
diff -u ../svgalib.ori/drivers/g400.c drivers/g400.c
--- ../svgalib.ori/drivers/g400.c	2004-09-10 12:59:25.000000000 +0200
+++ drivers/g400.c	2005-03-18 21:57:44.000000000 +0100
@@ -15,15 +15,15 @@
 #include <unistd.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
 #include "mga.h"
 #define SECONDCRTC 0
-#include "mga_g450pll.c"
-#include "vgammvgaio.h"
+#include "mga_g450.c"
+#include "vgammvga.h"
 
 #define SKREG_SAVE(i) (VGA_TOTAL_REGS+i)
 #define G400_TOTAL_REGS (VGA_TOTAL_REGS + 32 + 176 + 4 + 32)
@@ -659,7 +659,8 @@
     
     if((id==0x51a)||(id==0x51e)||(id==0x520)||(id==0x521)||(id==0x525)||(id==0x1000)||(id==0x1001)
                   ||(id==0x2527) ){
-       g400_init(0,0,0);
+       if (g400_init(0,0,0) != 0)
+          return 0;
        return 1;
     };
     return 0;
@@ -833,8 +834,7 @@
     found=__svgalib_pci_find_vendor_vga_pos(VENDOR_ID,buf,0);
     
     if(found==-1) {
-        fprintf(stderr,"Error: Must use Matrox driver, but no card found\n");
-        exit(1);
+        return -1;
     }
 
     g400_pciposition=found;
@@ -879,8 +879,12 @@
 
     if(!g400_memory) {
         map_linear(g400_linear_base, max_mem*1024*1024);
-        g400_memory=memorytest(LINEAR_POINTER,max_mem);
-        unmap_linear(max_mem*1024*1024);
+        if (LINEAR_POINTER == MAP_FAILED) {
+            g400_memory=max_mem*1024;
+        } else {
+            g400_memory=memorytest(LINEAR_POINTER,max_mem);
+            unmap_linear(max_mem*1024*1024);
+        }
     }
 
     __svgalib_modeinfo_linearset |= IS_LINEAR;
diff -u ../svgalib.ori/drivers/laguna.c drivers/laguna.c
--- ../svgalib.ori/drivers/laguna.c	2004-09-10 12:59:25.000000000 +0200
+++ drivers/laguna.c	2005-03-18 21:57:51.000000000 +0100
@@ -15,10 +15,10 @@
 #include <unistd.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
 
 #include "lagunaio.h"
diff -u ../svgalib.ori/drivers/mx.c drivers/mx.c
--- ../svgalib.ori/drivers/mx.c	2004-09-10 12:59:25.000000000 +0200
+++ drivers/mx.c	2005-03-18 21:57:56.000000000 +0100
@@ -18,13 +18,13 @@
 #include <unistd.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 
 
 /* New style driver interface. */
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
 
 #define MXREG_SAVE(i) (VGA_TOTAL_REGS+i)
diff -u ../svgalib.ori/drivers/nv3.c drivers/nv3.c
--- ../svgalib.ori/drivers/nv3.c	2005-03-16 10:40:43.000000000 +0100
+++ drivers/nv3.c	2005-04-13 21:09:45.000000000 +0200
@@ -22,12 +22,12 @@
 #include <unistd.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 
 /* New style driver interface. */
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "nv3ref.h"
 #include "nvreg.h"
 #include "vgapci.h"
@@ -407,8 +407,7 @@
 	return;
 }
 
-
-static int setmode(int mode, int prv_mode)
+static int nvsetmode(int mode, int prv_mode)
 {
     unsigned char *moderegs;
     ModeTiming *modetiming;
@@ -504,7 +503,8 @@
 	
  	MMIOBASE=0; /* let init() find those */
  	LINEARBASE=0;
- 	init(0,0,0);
+ 	if (init(0,0,0) != 0)
+		return 0;
 
 	return 1;
 }
@@ -640,7 +640,7 @@
     setpage,
     0,
     0,
-    setmode,
+    nvsetmode,
     modeavailable,
     setdisplaystart,
     setlogicalwidth,
@@ -678,7 +678,7 @@
  		found=__svgalib_pci_find_vendor_vga(0x12d2,buf,0);
  		if (found) {
   			found=__svgalib_pci_find_vendor_vga(0x10de,buf,0);
-  			if(found)return 0;
+  			if(found)return -1;
  		} 
  		switch((buf[0]>>20)&0xff){
   			case 0x1: 
@@ -716,6 +716,7 @@
   			case 0x19:
   			case 0x1D:
   			case 0x21:
+				flags = NO_INTERLACE;
 				twostagepll=1;
    				chip=GEFORCE;
    				nvnum=0x40;
@@ -728,6 +729,7 @@
   			case 0x18:
   			case 0x1A:
   			case 0x1F:
+				flags = NO_INTERLACE;
    				dualhead=0;
    				chip=GEFORCE; 
    				nvnum=(buf[0]>>20)&0xff;
@@ -766,6 +768,8 @@
 	__svgalib_mmio_size=8*1024*1024;
 	
 	map_mmio();
+	if (MMIO_POINTER == MAP_FAILED)
+		return -1;
 	
 	if(!force){
  		int boot0;
@@ -884,7 +888,7 @@
     for (P = 0; P <= P_MAX; P ++)
     {
         Freq = VClk << P;
-        if ((Freq >= 128000) && (Freq <= MAXVCLOCK))
+        if ((Freq >= 128000 || P == P_MAX) && (Freq <= MAXVCLOCK))
         {
             for (M = M_MIN; M <= M_MAX; M++)
             {
@@ -927,7 +931,7 @@
 	
 	for (P = 0; P <= 6; P++) {
 		Freq = VClk << P;
-		if ((Freq >= 400000) && (Freq <= 1000000)) {
+		if ((Freq >= 400000 || P == 6) && (Freq <= 1000000)) {
 			for (M = 1; M <= 13; M++) {
 				N = ((VClk << P) * M) / (PLL_INPUT_FREQ << 2);
 				if((N >= 5) && (N <= 255)) {
diff -u ../svgalib.ori/drivers/nv319.c drivers/nv319.c
--- ../svgalib.ori/drivers/nv319.c	2004-05-24 17:45:33.000000000 +0200
+++ drivers/nv319.c	2005-04-07 17:30:08.000000000 +0200
@@ -22,12 +22,12 @@
 #include <unistd.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 
 /* New style driver interface. */
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "nv3ref.h"
 #include "nvreg.h"
 #include "vgapci.h"
@@ -458,7 +458,8 @@
 
    MMIOBASE=0; /* let nv3_init() find those */
    LINEARBASE=0;
-   nv3_init(0,0,0);
+   if (nv3_init(0,0,0) != 0)
+       return 0;
    return 1;
 }
 
@@ -588,7 +589,7 @@
 }
 /* Function table (exported) */
 
-DriverSpecs __svgalib_nv3_driverspecs =
+DriverSpecs __svgalib_nv3_19_driverspecs =
 {
     nv3_saveregs,
     nv3_setregs,
@@ -634,7 +635,7 @@
        found=__svgalib_pci_find_vendor_vga(0x12d2,buf,0);
        if (found) {
           found=__svgalib_pci_find_vendor_vga(0x10de,buf,0);
-          if(found)return 0;
+          if(found)return -1;
        } 
        switch((buf[0]>>20)&0xff){
           case 0x1: 
@@ -694,6 +695,8 @@
     __svgalib_mmio_size=8*1024*1024;
 
     map_mmio();
+    if (MMIO_POINTER == MAP_FAILED)
+        return -1;
     
     if(!force){
        int boot0;
@@ -716,7 +719,7 @@
        }
     }
 
-    nv3_mapio();
+    mapio();
     nv3_unlock();
 
     {
@@ -779,7 +782,7 @@
     cardspecs->mapClock = nv3_map_clock;
     cardspecs->mapHorizontalCrtc = nv3_map_horizontal_crtc;
     cardspecs->matchProgrammableClock=nv3_match_programmable_clock;
-    __svgalib_driverspecs = &__svgalib_nv3_driverspecs;
+    __svgalib_driverspecs = &__svgalib_nv3_19_driverspecs;
     
     __svgalib_banked_mem_base=0xa0000;
     __svgalib_banked_mem_size=0x10000;
@@ -812,7 +815,7 @@
     for (P = 0; P <= P_MAX; P ++)
     {
         Freq = VClk << P;
-        if ((Freq >= 128000) && (Freq <= MAXVCLOCK))
+        if ((Freq >= 128000 || P == P_MAX) && (Freq <= MAXVCLOCK))
         {
             for (M = M_MIN; M <= M_MAX; M++)
             {
diff -u ../svgalib.ori/drivers/pm2.c drivers/pm2.c
--- ../svgalib.ori/drivers/pm2.c	2004-09-10 12:59:25.000000000 +0200
+++ drivers/pm2.c	2005-03-18 21:58:01.000000000 +0100
@@ -9,12 +9,12 @@
 #include <sys/mman.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
-#include "glint_regs.h"
+#include "glint_re.h"
 #include "pm2io.h"
 
 #define REG_SAVE(i) (VGA_TOTAL_REGS+i)
diff -u ../svgalib.ori/drivers/r128.c drivers/r128.c
--- ../svgalib.ori/drivers/r128.c	2005-03-17 14:28:03.000000000 +0100
+++ drivers/r128.c	2005-03-18 22:03:34.000000000 +0100
@@ -10,12 +10,12 @@
 #include <errno.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
-#include "endianess.h"
+#include "endianes.h"
 #include "r128_reg.h"
 
 static enum { Rage128=0, Radeon } chiptype; /* r128io needs to know */
@@ -820,7 +820,6 @@
     };
 
     if (freq > pll->max_pll_freq)      freq = pll->max_pll_freq;
-    if (freq * 12 < pll->min_pll_freq) freq = pll->min_pll_freq / 12;
 
     for (post_div = &post_divs[0]; post_div->divider; ++post_div) {
 	save->pll_output_freq = post_div->divider * freq;
@@ -828,6 +827,11 @@
 	    && save->pll_output_freq <= pll->max_pll_freq) break;
     }
 
+	if (!post_div->divider) {
+		post_div = post_divs + 5;
+		save->pll_output_freq = post_div->divider * freq;
+	}
+
     save->dot_clock_freq = freq;
     save->feedback_div   = R128Div(pll->reference_div * save->pll_output_freq,
 				   pll->reference_freq);
@@ -864,7 +868,6 @@
     };
 
     if (freq > pll->max_pll_freq)      freq = pll->max_pll_freq;
-    if (freq * 12 < pll->min_pll_freq) freq = pll->min_pll_freq / 12;
 
     for (post_div = &post_divs[0]; post_div->divider; ++post_div) {
 	save->pll_output_freq = post_div->divider * freq;
@@ -872,6 +875,11 @@
 	    && save->pll_output_freq <= pll->max_pll_freq) break;
     }
 
+	if (!post_div->divider) {
+		post_div = post_divs + 6;
+		save->pll_output_freq = post_div->divider * freq;
+	}
+
     save->dot_clock_freq = freq;
     save->feedback_div   = R128Div(pll->reference_div * save->pll_output_freq,
 				   pll->reference_freq);
@@ -1041,8 +1049,6 @@
     ModeTiming *modetiming;
     ModeInfo *modeinfo;
 
-    modeinfo = __svgalib_createModeInfoStructureForSvgalibMode(mode);
-
     if (IS_IN_STANDARD_VGA_DRIVER(mode))
 	return __svgalib_vga_driverspecs.modeavailable(mode);
 
@@ -1125,7 +1131,8 @@
 /* Indentify chipset, initialize and return non-zero if detected */
 static int r128_test(void)
 {
-    return r128_init(0,0,0);
+    if (r128_init(0,0,0) != 0)
+        return 0;
     return 1;
 }
 
@@ -1321,7 +1328,7 @@
 
     found=__svgalib_pci_find_vendor_vga(VENDOR_ID,buf,0);
 
-    if(found) return 0;
+    if(found) return -1;
     
     id=(buf[0]>>16)&0xffff;
     
@@ -1361,15 +1368,19 @@
 
 	if( (id == 0x4158) ||
 		(id == 0x5354)
-		) return 0; /* Mach64/Mach32 */
+		) return -1; /* Mach64/Mach32 */
 	
-    if(chiptype==-1) return 0;
+    if(chiptype==-1) return -1;
     
     r128_linear_base=buf[4]&0xffffff00;
     r128_mmio_base=buf[6]&0xffffff00;
 
-    MMIO_POINTER = mmap(0, 16*1024, PROT_READ | PROT_WRITE, MAP_SHARED, __svgalib_mem_fd,
-       			r128_mmio_base);
+    __svgalib_mmio_base=r128_mmio_base;
+    __svgalib_mmio_size=16*1024;
+
+    map_mmio();
+    if (MMIO_POINTER == MAP_FAILED)
+        return -1;
 
     if(!r128_memory) r128_memory = INREG(R128_CONFIG_MEMSIZE) / 1024;
 
@@ -1417,6 +1428,8 @@
         uint16_t pll_info_block;
         BIOS_POINTER = mmap(0, 64*1024, PROT_READ | PROT_WRITE, MAP_SHARED, __svgalib_mem_fd,
        			    0xc0000);
+        if (BIOS_POINTER == MAP_FAILED)
+            return -1;
         bios_header    = R128_BIOS16(0x48);
         pll_info_block = R128_BIOS16(bios_header + 0x30);
         pll.reference_freq = R128_BIOS16(pll_info_block + 0x0e);
@@ -1431,8 +1444,6 @@
     pll.min_pll_freq,    pll.max_pll_freq, pll.xclk);
 #endif
 
-    munmap(MMIO_POINTER, 16*1024);
-
     r128_mapio();
 	
     if (__svgalib_driver_report) {
@@ -1460,12 +1471,10 @@
     __svgalib_banked_mem_size=0x10000;
     __svgalib_linear_mem_base=r128_linear_base;
     __svgalib_linear_mem_size=r128_memory*0x400;
-    __svgalib_mmio_base=r128_mmio_base;
-    __svgalib_mmio_size=16*1024;
     if(chiptype==Radeon) {
         __svgalib_banked_mem_base=r128_linear_base;
         __svgalib_r128_driverspecs.__svgalib_setpage = __svgalib_emul_setpage;
     }
 
-    return 1;
+    return 0;
 }
diff -u ../svgalib.ori/drivers/rage.c drivers/rage.c
--- ../svgalib.ori/drivers/rage.c	2004-09-10 12:59:25.000000000 +0200
+++ drivers/rage.c	2005-04-06 18:45:14.000000000 +0200
@@ -33,12 +33,12 @@
 #include <sys/mman.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 
 /* New style driver interface. */
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
 #include "rage.h"
 
@@ -920,7 +920,8 @@
    found=__svgalib_pci_find_vendor_vga(0x1002,buf,0);
    if(found)return 0;
    
-   rage_init(0,0,0);
+   if (rage_init(0,0,0) != 0)
+       return 0;
    return 1;
    
    ATIIOBase=buf[5]&BLOCK_IO_BASE;
@@ -942,7 +943,6 @@
          };
       };
 
-printf("i=%i\n", i);
 	  
     if(!i)return 0;  
    
@@ -1170,8 +1170,7 @@
       };
 
    if(found || !i){
-      fprintf(stderr,"svgalib: Rage driver must be used, but not found\n");
-      exit(1);
+      return -1;
    };
 
    rage_chiptyperev=(buf[0]&0xffff0000) | (buf[2]&0xff);
@@ -1278,6 +1277,7 @@
 
 #define BIOSWord(x) ((int)BIOS[x]+256*(int)BIOS[x+1])
 
+#if 0
    if(biosparams) {
 	  fref=biosparam[1];
 	  ATIClockToProgram=biosparam[0];
@@ -1289,8 +1289,14 @@
 	  Nadj=0;
 	  Madj=0;
 	  fref*=2; /* X says double for all chips */
-   } else {
+   } else
+#endif
+	{
+#if 0
 	   BIOS=mmap(0,32*1024,PROT_READ|PROT_WRITE,MAP_SHARED,__svgalib_mem_fd,0xe4100000);
+#else
+	   BIOS=mmap(0,32*1024,PROT_READ|PROT_WRITE,MAP_SHARED,__svgalib_mem_fd,0xc0000);
+#endif
 
 	   i=BIOSWord(0x48);
 	   j=BIOSWord(i+0x10);
diff -u ../svgalib.ori/drivers/s3.c drivers/s3.c
--- ../svgalib.ori/drivers/s3.c	2004-09-10 12:59:25.000000000 +0200
+++ drivers/s3.c	2005-03-18 21:58:11.000000000 +0100
@@ -92,12 +92,12 @@
 #include <unistd.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "timing.h"
 #include "ramdac/ramdac.h"
-#include "clockchip/clockchip.h"
+#include "clockchi/clockchi.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "8514a.h"
 #include "vgapci.h"
 
@@ -566,7 +566,7 @@
     __svgalib_outCR(0x39, regs[EXT + 0x39 - 0x30] = cr39);
     __svgalib_outCR(0x38, regs[EXT + 0x38 - 0x30] = cr38);
 #if 0
-#include "ramdac/IBMRGB52x.h"
+#include "ramdac/ibmrgb52.h"
 
     do {
 	unsigned char m, n, df;
@@ -1090,7 +1090,7 @@
 {
     ModeInfo *modeinfo;
     ModeTiming *modetiming;
-    unsigned char moderegs[S3_TOTAL_REGS];
+    unsigned char* moderegs;
     int res;
 
     if (IS_IN_STANDARD_VGA_DRIVER(mode)) {
@@ -1126,12 +1126,17 @@
     modeinfo->lineWidth = s3_adjlinewidth(modeinfo->lineWidth);
     CI.xbytes = modeinfo->lineWidth;
 
+    moderegs = malloc(S3_TOTAL_REGS);
+
     s3_initializemode(moderegs, modetiming, modeinfo);
     free(modeinfo);
     free(modetiming);
 
     __svgalib_setregs(moderegs);	/* Set standard regs. */
     s3_setregs(moderegs, mode);	/* Set extended regs. */
+
+    free(moderegs);
+
     return 0;
 }
 
diff -u ../svgalib.ori/drivers/savage.c drivers/savage.c
--- ../svgalib.ori/drivers/savage.c	2004-09-10 12:59:25.000000000 +0200
+++ drivers/savage.c	2005-04-04 21:41:54.000000000 +0200
@@ -15,13 +15,13 @@
 #include <sys/mman.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
-#include "endianess.h"
-#include "vgammvgaio.h"
+#include "endianes.h"
+#include "vgammvga.h"
 
 #define SAVAGEREG_SAVE(i) (VGA_TOTAL_REGS+i)
 #define TOTAL_REGS (VGA_TOTAL_REGS + 96)
@@ -999,7 +999,9 @@
         case 0x8a25:
         case 0x8a26:
         case 0x8c10:
+        case 0x8c11:
         case 0x8c12:
+        case 0x8c13:
         case 0x9102:
 		case 0x8d01:
 		case 0x8d02:
diff -u ../svgalib.ori/drivers/savage18.c drivers/savage18.c
--- ../svgalib.ori/drivers/savage18.c	2004-05-24 17:45:33.000000000 +0200
+++ drivers/savage18.c	2005-04-07 17:30:12.000000000 +0200
@@ -15,13 +15,13 @@
 #include <sys/mman.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
-#include "endianess.h"
-#include "vgammvgaio.h"
+#include "endianes.h"
+#include "vgammvga.h"
 
 #define SAVAGEREG_SAVE(i) (VGA_TOTAL_REGS+i)
 #define TOTAL_REGS (VGA_TOTAL_REGS + 64)
@@ -415,7 +415,7 @@
 
 static int modeavailable(int mode)
 {
-    struct info *info;
+    struct vgainfo *info;
     ModeTiming *modetiming;
     ModeInfo *modeinfo;
 
@@ -526,7 +526,7 @@
         {31,  0, 4, 170000},
         {31,  0, 3, 135000},
         {31,  0, 4, 220000},
-        {31,  0, 3, 135000},
+        {31,  0, 4, 135000},
         {31,  0, 4, 170000},
         {31,  0, 4, 170000},
         {127, 0, 4, 180000},
@@ -540,7 +540,7 @@
     vgaS3VPtr new = (vgaS3VPtr)(moderegs+VGA_TOTAL_REGS);
    
     if(modeinfo->bitsPerPixel==16) {
-        if((chipset==VIRGE)|| (chipset==TRIO64)) {
+        if((chipset==VIRGE)|| (chipset==TRIO64) || (chipset==VIRGEDX)) {
             modetiming->HDisplay *=2;
             modetiming->HSyncStart *=2;
             modetiming->HSyncEnd *=2;
@@ -891,7 +891,9 @@
         case 0x8a22:
         case 0x8a23:
         case 0x8c10:
+        case 0x8c11:
         case 0x8c12:
+        case 0x8c13:
         case 0x9102:
 		case 0x8d03:
 		case 0x8d04:
@@ -1108,7 +1110,7 @@
 }       
 
 /* Function table (exported) */
-DriverSpecs __svgalib_savage_driverspecs =
+DriverSpecs __svgalib_savage_18_driverspecs =
 {
     saveregs,
     setregs,
@@ -1206,7 +1208,9 @@
             chipset = SAVAGE3D;
             break;
         case 0x8c10:
+        case 0x8c11:
         case 0x8c12:
+        case 0x8c13:
             chipset = SAVAGEMX;
             break;
         case 0x8a22:
@@ -1285,7 +1289,7 @@
     cardspecs->mapClock = map_clock;
     cardspecs->mapHorizontalCrtc = map_horizontal_crtc;
     cardspecs->matchProgrammableClock=match_programmable_clock;
-    __svgalib_driverspecs = &__svgalib_savage_driverspecs;
+    __svgalib_driverspecs = &__svgalib_savage_18_driverspecs;
     __svgalib_banked_mem_base=0xa0000;
     __svgalib_banked_mem_size=0x10000;
     __svgalib_linear_mem_base=linear_base;
diff -u ../svgalib.ori/drivers/sis.c drivers/sis.c
--- ../svgalib.ori/drivers/sis.c	2004-09-10 12:59:25.000000000 +0200
+++ drivers/sis.c	2005-03-18 21:58:23.000000000 +0100
@@ -29,12 +29,12 @@
 #include <unistd.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
-#include "vgarelvgaio.h"
+#include "vgarelvg.h"
 
 #define SISREG_SAVE(i) (VGA_TOTAL_REGS+i)
 #define SIS_TOTAL_REGS (VGA_TOTAL_REGS + 64 + 40 + 20)
@@ -838,6 +838,7 @@
     found=__svgalib_pci_find_vendor_vga(VENDOR_ID,buf,0);
     sis_linear_base=0;
     chip=0;
+    pci_id=0;
     if (!found){
        sis_linear_base=buf[4]&0xffffff00;
        pci_id=(buf[0]>>16)&0xffff;
diff -u ../svgalib.ori/drivers/trident.c drivers/trident.c
--- ../svgalib.ori/drivers/trident.c	2005-03-16 19:52:09.000000000 +0100
+++ drivers/trident.c	2005-03-18 22:12:45.000000000 +0100
@@ -8,14 +8,14 @@
 #include <unistd.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
+#include "svgadriv.h"
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
 #include "trident.h"
-#include "vgammvgaio.h"
-#include "endianess.h"
+#include "vgammvga.h"
+#include "endianes.h"
 
 #define TOTAL_REGS (VGA_TOTAL_REGS + sizeof(TRIDENTRegRec))
 
@@ -453,13 +453,15 @@
 static void TGUISetClock(int clock, uint8_t *a, uint8_t *b)
 {
 	int powerup[4] = { 1,2,4,8 };
-	int clock_diff = 750;
+	int clock_diff;
+	int setup;
 	int freq, ffreq;
 	int m, n, k;
-	int p, q, r, s; 
+	int p, q, r;
 	int endn, endm, endk, startk=0, startn;
 
-	p = q = r = s = 0;
+	p = q = r = setup = 0;
+	clock_diff = clock;
 
 	if (NewClockCode)
 	{	
@@ -484,30 +486,15 @@
 
 	for (k=startk;k<=endk;k++)
 	  for (n=startn;n<=endn;n++)
-	    for (m=1;m<=endm;m++) {
-			ffreq =  ( ((n + 8) * frequency) / ((m + 2) * powerup[k]) ) ;
-			if ((ffreq > freq - clock_diff) && (ffreq < freq + clock_diff)) 
-			{
-/*
- * It seems that the 9440 docs have this STRICT limitation, although
- * most 9440 boards seem to cope. 96xx/Cyber chips don't need this limit
- * so, I'm gonna remove it and it allows lower clocks < 25.175 too !
- */
-#define STRICT 1
-#ifdef STRICT
-				if ((chip>TGUI9440AGi) || ((n+8)*100/(m+2) < 978 && (n+8)*100/(m+2) > 349)) {
-#endif
-					clock_diff = (freq > ffreq) ? freq - ffreq : ffreq - freq;
-					p = n; q = m; r = k; s = ffreq;
-#ifdef STRICT
-				}
-#endif
-			}
+	    for (m=1;m<=endm;m++)
+	    {
+		ffreq =  ( ((n + 8) * frequency) / ((m + 2) * powerup[k]) ) ;
+		if (!setup || abs(ffreq - freq) < clock_diff)
+		{
+			clock_diff = abs(ffreq - freq);
+			p = n; q = m; r = k; setup = 1;
 		}
-	
-	if (s == 0)	{
-            exit(1);
-	}
+	    }
 
 	if (NewClockCode) {
 		/* N is all 8bits */
diff -u ../svgalib.ori/drivers/unichrom.c drivers/unichrom.c
--- ../svgalib.ori/drivers/unichrom.c	2005-03-17 14:28:20.000000000 +0100
+++ drivers/unichrom.c	2005-03-19 19:07:26.000000000 +0100
@@ -8,13 +8,13 @@
 #include <unistd.h>
 #include "vga.h"
 #include "libvga.h"
-#include "driver.h"
-#include "vgarelvgaio.h"
+#include "svgadriv.h"
+#include "vgarelvg.h"
 
 /* New style driver interface. */
 #include "timing.h"
 #include "vgaregs.h"
-#include "interface.h"
+#include "interfac.h"
 #include "vgapci.h"
 
 static int unichrome_init(int, int, int);
diff -u ../svgalib.ori/ramdac/attdacs.c ramdac/attdacs.c
--- ../svgalib.ori/ramdac/attdacs.c	2004-09-10 13:12:14.000000000 +0200
+++ ramdac/attdacs.c	2005-03-18 21:58:27.000000000 +0100
@@ -11,7 +11,7 @@
 
 #include "timing.h"
 #include "vgaregs.h"
-#include "driver.h"		/* for __svgalib_driver_report */
+#include "svgadriv.h"		/* for __svgalib_driver_report */
 #include "ramdac.h"
 
 /*
diff -u ../svgalib.ori/ramdac/btdacs.c ramdac/btdacs.c
--- ../svgalib.ori/ramdac/btdacs.c	2002-04-10 13:57:56.000000000 +0200
+++ ramdac/btdacs.c	2005-03-18 21:58:30.000000000 +0100
@@ -12,7 +12,7 @@
 
 #include "timing.h"
 #include "vgaregs.h"
-#include "driver.h"		/* for __svgalib_driver_report */
+#include "svgadriv.h"		/* for __svgalib_driver_report */
 #include "ramdac.h"
 
 /*
diff -u ../svgalib.ori/ramdac/ibmrgb52.c ramdac/ibmrgb52.c
--- ../svgalib.ori/ramdac/ibmrgb52.c	2002-04-10 13:57:56.000000000 +0200
+++ ramdac/ibmrgb52.c	2005-03-18 21:58:33.000000000 +0100
@@ -12,10 +12,10 @@
 
 #include "timing.h"
 #include "vgaregs.h"
-#include "driver.h"		/* for __svgalib_driver_report */
+#include "svgadriv.h"		/* for __svgalib_driver_report */
 #include "ramdac.h"
 
-#include "IBMRGB52x.h"
+#include "ibmrgb52.h"
 
 #define IBMRGB52x_STATESIZE	0x101
 
diff -u ../svgalib.ori/ramdac/ics_gend.c ramdac/ics_gend.c
--- ../svgalib.ori/ramdac/ics_gend.c	2004-09-10 13:12:14.000000000 +0200
+++ ramdac/ics_gend.c	2005-03-18 21:58:35.000000000 +0100
@@ -8,7 +8,7 @@
 #include "libvga.h"
 #include "timing.h"
 #include "vgaregs.h"
-#include "driver.h"		/* for __svgalib_driver_report */
+#include "svgadriv.h"		/* for __svgalib_driver_report */
 #include "ramdac.h"
 
 /* SDAC/GENDAC registers */
diff -u ../svgalib.ori/ramdac/icw.c ramdac/icw.c
--- ../svgalib.ori/ramdac/icw.c	2004-09-10 13:12:14.000000000 +0200
+++ ramdac/icw.c	2005-03-18 21:58:37.000000000 +0100
@@ -16,7 +16,7 @@
 
 #include "timing.h"
 #include "vgaregs.h"
-#include "driver.h"		/* for __svgalib_driver_report */
+#include "svgadriv.h"		/* for __svgalib_driver_report */
 #include "ramdac.h"
 
 #ifdef INCLUDE_ICW_DAC_TEST
diff -u ../svgalib.ori/ramdac/normal.c ramdac/normal.c
--- ../svgalib.ori/ramdac/normal.c	2002-04-10 13:57:56.000000000 +0200
+++ ramdac/normal.c	2005-03-18 21:58:38.000000000 +0100
@@ -11,7 +11,7 @@
 
 #include "timing.h"
 #include "vgaregs.h"
-#include "driver.h"		/* for __svgalib_driver_report */
+#include "svgadriv.h"		/* for __svgalib_driver_report */
 #include "ramdac.h"
 
 #ifdef INCLUDE_NORMAL_DAC_TEST
diff -u ../svgalib.ori/ramdac/ramdac.c ramdac/ramdac.c
--- ../svgalib.ori/ramdac/ramdac.c	2004-09-10 13:12:14.000000000 +0200
+++ ramdac/ramdac.c	2005-03-18 21:58:41.000000000 +0100
@@ -16,7 +16,7 @@
 
 #include "timing.h"
 #include "vgaregs.h"
-#include "driver.h"		/* for __svgalib_driver_report */
+#include "svgadriv.h"		/* for __svgalib_driver_report */
 #include "ramdac.h"
 
 /*
diff -u ../svgalib.ori/ramdac/s3dacs.c ramdac/s3dacs.c
--- ../svgalib.ori/ramdac/s3dacs.c	2004-09-10 13:12:14.000000000 +0200
+++ ramdac/s3dacs.c	2005-03-18 21:58:43.000000000 +0100
@@ -10,7 +10,7 @@
 #include "libvga.h"
 #include "timing.h"
 #include "vgaregs.h"
-#include "driver.h"		/* for __svgalib_driver_report */
+#include "svgadriv.h"		/* for __svgalib_driver_report */
 #include "ramdac.h"
 
 /* SDAC/GENDAC registers */
diff -u ../svgalib.ori/ramdac/sierra.c ramdac/sierra.c
--- ../svgalib.ori/ramdac/sierra.c	2004-09-10 13:12:14.000000000 +0200
+++ ramdac/sierra.c	2005-03-18 21:58:45.000000000 +0100
@@ -10,7 +10,7 @@
 
 #include "timing.h"
 #include "vgaregs.h"
-#include "driver.h"		/* for __svgalib_driver_report */
+#include "svgadriv.h"		/* for __svgalib_driver_report */
 #include "ramdac.h"
 
 /*
diff -u ../svgalib.ori/clockchi/icd2061a.c clockchi/icd2061a.c
--- ../svgalib.ori/clockchi/icd2061a.c	2004-09-10 13:12:14.000000000 +0200
+++ clockchi/icd2061a.c	2005-03-18 21:58:46.000000000 +0100
@@ -13,8 +13,8 @@
 #include "timing.h"
 #include "libvga.h"
 #include "ramdac/ramdac.h"
-#include "clockchip.h"
-#include "driver.h"
+#include "clockchi.h"
+#include "svgadriv.h"
 #include "vga.h"
 
 /* 
